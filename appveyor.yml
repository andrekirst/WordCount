# Erweiterte Dokumentation: https://www.appveyor.com/docs/appveyor-yml/

# Version festlegen
version: 1.0.{build}

clone_folder: c:\projects\WordCount

skip_branch_with_pr: false

# VM-Template fÃ¼r Visual Studio 2017
image: Visual Studio 2017

assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "{version}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"

platform: Any CPU
configuration: Release

cache:
  - packages -> **\packages.config

matrix:
  fast_finish: true

environment:
  deploymentfilename: ""
  SONARQUBE_TOKEN:
    secure: ACcdrpuhAnH8XDKRMUFdE4pjTH1vlH5LEvG0U5MDyuQYfDY3zjFXVzA0HLlmtQSq
  CODECOV_TOKEN:
    secure: xD2Si76xwqwDjnJOB1w1SjTtiogJX9xn9fJbXXqlzyYAt3/32El2hxE3GW22Xu0X
  COVERALLS_REPO_TOKEN:
    secure: bfX6ISggSBc6AHPqmjFB4CG6xYnpU3mZbJEGtVvbd+XO16NZBd3IUeLvmFyCLhuC

install:
  - choco install "msbuild-sonarqube-runner" -y
  - choco install xunit -y
  - choco install opencover.portable -y
  - choco install codecov -y

before_build:
  - nuget restore c:\projects\WordCount\WordCount.sln

build_script:
  - ps: MSBuild.SonarQube.Runner.exe begin /n:"WordCount" /k:"andrekirst:WordCount" /d:"sonar.organization=andrekirst-github" /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.login=$($env:SONARQUBE_TOKEN)" /v:"$($env:appveyor_build_version)" /d:"sonar.exclusions=**/AssemblyInfo.cs" /d:"sonar.branch.name=$env:APPVEYOR_REPO_BRANCH" /d:"sonar.dotnet.visualstudio.testProjectPattern=*.Tests" /d:sonar.cs.opencover.reportsPaths="$env:APPVEYOR_BUILD_FOLDER\opencovertests.xml" /d:sonar.cs.vstest.reportsPath="$env:APPVEYOR_BUILD_FOLDER\WordCount.Tests\bin\$env:CONFIGURATION\TestResults*.trx"
  - msbuild c:\projects\WordCount\WordCount.sln /property:Configuration=Release /t:Rebuild /verbosity:minimal
  - ps: OpenCover.Console.exe -register -target:"%xunit20%\xunit.console.x86.exe" -targetargs:"c:\projects\WordCount\WordCount.Tests\bin\Release\WordCount.Tests.dll -noshadow" -excludebyattribute:*ExcludeFromCodeCoverage* -filter:"+[WordCount*]* -[*Tests*]*" -output:"c:\projects\WordCount\opencovertests.xml"
  - ps: MSBuild.SonarQube.Runner.exe end /d:"sonar.login=$($env:SONARQUBE_TOKEN)"
  - ps: codecov -f "c:\projects\WordCount\opencovertests.xml" -t $env:CODECOV_TOKEN

after_build:
  - ps: if ($env:APPVEYOR_REPO_BRANCH -eq "master") { $env:deploymentfilename = "wordcount-$($env:appveyor_build_version).zip" }
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER) { $env:deploymentfilename = "wordcount-$($env:appveyor_build_version)-PR$env:APPVEYOR_PULL_REQUEST_NUMBER.zip" }
  - ps: if ($env:APPVEYOR_REPO_BRANCH -like "feature*") { $env:deploymentfilename = "wordcount-$($env:appveyor_build_version)-unstable.zip" }
  - ps: New-Item -Type Directory -Path "$env:APPVEYOR_BUILD_FOLDER\output\"
  - ps: Copy-Item -Destination "$env:APPVEYOR_BUILD_FOLDER\output\" -Path "$env:APPVEYOR_BUILD_FOLDER\WordCount\bin\Release\*.*" -Recurse
  - ps: rm "$env:APPVEYOR_BUILD_FOLDER\output\*.pdb" -Recurse
  - ps: 7z a $env:deploymentfilename "$env:APPVEYOR_BUILD_FOLDER\output\*.*" -r

on_success:
  - curl -s -o copilot https://copilot.blackducksoftware.com/ci/appveyor/scripts/upload
  - bash copilot

artifacts:
  - path: $(deploymentfilename)
    name: wordcount